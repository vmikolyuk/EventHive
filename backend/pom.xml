<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.1.0</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.eventHive</groupId>
	<artifactId>EventHive</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>EventHive</name>
	<description>System for organizing events and recruiting people</description>
	<properties>
		<java.version>17</java.version>
		<node.version>v18.6.0</node.version>
		<npm.version>8.13.2</npm.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.1.0</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>3.1.1</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>


	<profiles>
		<profile>
			<id>front</id>
			<properties>
				<maven.test.skip>true</maven.test.skip>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.12.0</version>
						<configuration>
							<nodeVersion>${node.version}</nodeVersion>
							<npmVersion>${npm.version}</npmVersion>
							<workingDirectory>../frontend</workingDirectory>
							<nodeDownloadRoot>http://sd-npm.naumen.ru/repository/raw-nodejs-proxy/</nodeDownloadRoot>
							<npmDownloadRoot>http://sd-npm.naumen.ru/repository/npm-registry/npm/-/</npmDownloadRoot>
						</configuration>
						<executions>
							<execution>
								<id>install-node-and-npm</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<phase>initialize</phase>
							</execution>
							<execution>
								<id>npm install</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<!-- optional: default phase is "generate-resources" -->
								<phase>generate-resources</phase>
								<!-- Optional configuration which provides for running any npm command -->
								<configuration>
									<arguments>install</arguments>
								</configuration>
							</execution>
							<execution>
								<id>npm run dev</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<phase>prepare-package</phase>
								<configuration>
									<environmentVariables>
										<NODE_OPTIONS>--max-old-space-size=1152</NODE_OPTIONS>
									</environmentVariables>
									<arguments>run build</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-frontend</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${project.build.outputDirectory}/static
									</outputDirectory>
									<resources>
										<resource>
											<filtering>false</filtering>
											<directory>${project.basedir}/../frontend/build</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>default-resources</id>
								<configuration>
									<resources>
										<resource>
											<directory>${project.basedir}/src/main/resources</directory>
											<filtering>true</filtering>
											<excludes>
												<exclude>static/fonts/**</exclude>
											</excludes>
										</resource>
										<resource>
											<directory>${project.basedir}/src/main/resources</directory>
											<filtering>false</filtering>
											<includes>
												<include>static/fonts/**</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
